#Section 3.4: Indentify consonant groups
#Vowels are:
#   Unannotated aeiou
#   Anything with a vowel annotation
#   w/y if  before a consonant
#           at the end of a segment
#           part of a voewl digraph ay ey oy aw ew ow
#Consonants are:
#   bcdfghjklmnpqrstvxz
#   Anything with consonant annotation
#   w/y which is not vowel
#   u when qu gua guo guu

#because we can't spread regex context => accross transducer context ||
#we need to identify consonantness/vowelness of unannotated w, y, u
#tack on a @ after it if is a vowel and a # if it is a consonant
#only concerned when not in ant


define VowelLetter      ["a"|"e"|"i"|"o"|"u"];
define VowelWithAnt     WithAnt(VowelAnt, [\"}"]*);

define ConsonantLetter  ["b"|"c"|"d"|"f"|"g"|"h"|"j"|"k"|"l"|"m"|"n"|"p"|"q"|"r"|"s"|"t"|"v"|"x"|"z"];
define ConsonantWithAnt WithAnt(ConsonantAnt, [\"}"]*);

define PreGroupVowel    [VowelLetter | VowelWithAnt | WithAnt(["\st"|"\stst"], ["a"|"e"|"i"|"o"|"u"]+)];
define PreGroupConsonant [ConsonantLetter | ConsonantWithAnt];

#apply @# transforms
define WYBeforeCons     ["w"|"y"] -> ... "!@" || NotInAntL _ PreGroupConsonant;
define WYBeforeSegEnd   ["w"|"y"] -> ... "!@" || NotInAntL _ SegBoundary;
define WYVowelDigraph   ["w"|"y"] -> ... "!@" || NotInAntL ["a"|"e"|"o"] _ \["!@"|"!#"];
#y is also a vowel after a consonant
define YAfterConsonant  "y" -> ... "!@" || NotInAntL PreGroupConsonant _;
define WYConsonant      ["w"|"y"] -> ... "!#" || NotInAntL _ \"!@";
define WYMarkerTrans    WYBeforeCons .o. WYBeforeSegEnd .o. WYVowelDigraph .o. YAfterConsonant .o. WYConsonant;
define UMarkQU          "q" "u" -> ... "!#" || NotInAntL _;
define UMarkGUA         "g" "u" "a" -> "g" "u" "!#" "a" || NotInAntL _;
define UMarkGUO         "g" "u" "o" -> "g" "u" "!#" "o" || NotInAntL _;
define UMarkGUU         "g" "u" "u" -> "g" "u" "!#" "u" "!#" || NotInAntL _;
define UMarkVowel       "u" -> ... "!@" || NotInAntL _;
define UMarkerTrans     UMarkQU .o. UMarkGUA .o. UMarkGUU .o. UMarkGUO .o. UMarkVowel;
define MarkerAdd        WYMarkerTrans .o. UMarkerTrans;

#now remove U from this group, it is usually vowel annotated
define VowelLetter2     ["a"|"e"|"i"|"o"];

define VowelGroup       [VowelLetter2 | ? "!@" | VowelWithAnt | WithAnt(["\st"|"\stst"], ["a"|"e"|"i"|"o"|"u"]+)]+;
define ConsonantGroup   [ConsonantLetter | ? "!#" | ConsonantWithAnt]+;

define GroupUnitsMarkV  [..] @-> ",@" || ConsonantGroup _ VowelGroup;
define GroupUnitsMarkC  [..] @-> ",#" || VowelGroup _ ConsonantGroup;
define GroupUnitsMarkFirstV [..] @-> "@" || SegBoundary _ VowelGroup;
define GroupUnitsMarkFirstC [..] @-> "#" || SegBoundary _ ConsonantGroup;

define GroupUnits [GroupUnitsMarkV .o.  GroupUnitsMarkC] .o. [GroupUnitsMarkFirstV .o. GroupUnitsMarkFirstC];

#Now let's undo some damage (easier than avoiding in the first place)
#We put commas in annotations, this is bad
define UndoGroupingsInAnt [",@"|",#"] @> 0 || "{" [\"}"]* _ ?* "}";
define UndoMarkerAdd    ["!@"|"!#"] -> 0;
define Phase34 MarkerAdd .o. GroupUnits .o. UndoMarkerAdd .o. UndoGroupingsInAnt;


#Section 3.5: Identify vowel digraphs/units
#Match l-r pairs for digraphs and break them
#These rules actually all need to run at the same priority to work

define AllowedDigraphs ["a" "a" | "a" "e" | "a" "i" | "a" "y" | "a" "u" | "a" "w" | "e" "a" | "e" "e" |
                        "e" "i" | "e" "y" | "e" "u" | "e" "w" | "o" "a" | "o" "i" | "o" "y" | "o" "u" | "o" "w"];
define VowelOrStress WithAnt([VowelAnt|"\st"|"\stst"], [\"}"]*);
#for some reason foma/xfst is incredibly stupid. A ,, B doesn't do what one would expect
#if they're defined elsewhere. You actually need to literally include them like so
define Phase35 AllowedDigraphs @> ... ",@" // VowelUnitStartL _ \UnitBoundary #ne double comma pas
    ,,  "a" @> ... ",@" // VowelUnitStartL _ ["o"|VowelOrStress]
    ,,  "e" @> ... ",@" // VowelUnitStartL _ ["o"|VowelOrStress]
    ,,  "i" @> ... ",@" // VowelUnitStartL _ ["a"|"e"|"i"|"o"|"u"|"y"|"w"|VowelOrStress]
    ,,  "o" @> ... ",@" // VowelUnitStartL _ ["e"|VowelOrStress]
    ,,  "u" @> ... ",@" // VowelUnitStartL _ ["a"|"e"|"i"|"o"|"u"|"y"|"w"|VowelOrStress]
    #This rule not in the paper but i'm pretty sure no vowel digraph is formed in e.g. b,ye -> b,y,e
    ,,  ["y"|"w"] @> ... ",@" // VowelUnitStartL _ ["a"|"e"|"i"|"o"|"u"|"y"|"w"|VowelOrStress]
    ,,  WithAnt(VowelAnt, [\"}"]*) @> ... ",@" // VowelUnitStartL _ \GroupBoundary;
    
